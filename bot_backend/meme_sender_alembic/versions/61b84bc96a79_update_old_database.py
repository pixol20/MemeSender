"""update_old_database

Revision ID: 61b84bc96a79
Revises: 
Create Date: 2025-04-03 07:13:22.198390

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '61b84bc96a79'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('collections', sa.Column('users_amount', sa.BigInteger(), nullable=False))
    op.alter_column('collections', 'creator_telegram_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('collections', 'meme_ids',
               existing_type=postgresql.ARRAY(sa.BIGINT()),
               nullable=False)
    op.alter_column('collections', 'likes',
               existing_type=sa.BIGINT(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('collections', 'title',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('collections', 'tags',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               nullable=False)
    op.alter_column('collections', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_column('collections', 'users_ammount')
    op.alter_column('memes', 'uploader_telegram_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('memes', 'duration',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('memes', 'likes',
               existing_type=sa.BIGINT(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('memes', 'telegram_media_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('memes', 'title',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('memes', 'tags',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               nullable=False,
               existing_server_default=sa.text("'{}'::text[]"))
    op.alter_column('memes', 'media_type',
               existing_type=postgresql.ENUM('audio', 'gif', 'photo', 'video', 'voice', name='media_type'),
               nullable=False)
    op.alter_column('memes', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.add_column('users', sa.Column('last_upload_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('users', 'saved_collections',
               existing_type=postgresql.ARRAY(sa.BIGINT()),
               nullable=False,
               existing_server_default=sa.text("'{}'::bigint[]"))
    op.alter_column('users', 'is_banned',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'is_banned',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'saved_collections',
               existing_type=postgresql.ARRAY(sa.BIGINT()),
               nullable=True,
               existing_server_default=sa.text("'{}'::bigint[]"))
    op.drop_column('users', 'last_upload_date')
    op.alter_column('memes', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('memes', 'media_type',
               existing_type=postgresql.ENUM('audio', 'gif', 'photo', 'video', 'voice', name='media_type'),
               nullable=True)
    op.alter_column('memes', 'tags',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               nullable=True,
               existing_server_default=sa.text("'{}'::text[]"))
    op.alter_column('memes', 'title',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('memes', 'telegram_media_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('memes', 'likes',
               existing_type=sa.BIGINT(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('memes', 'duration',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('memes', 'uploader_telegram_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.add_column('collections', sa.Column('users_ammount', sa.BIGINT(), server_default=sa.text('1'), autoincrement=False, nullable=True))
    op.alter_column('collections', 'is_public',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('collections', 'tags',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               nullable=True)
    op.alter_column('collections', 'title',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('collections', 'likes',
               existing_type=sa.BIGINT(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('collections', 'meme_ids',
               existing_type=postgresql.ARRAY(sa.BIGINT()),
               nullable=True)
    op.alter_column('collections', 'creator_telegram_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.drop_column('collections', 'users_amount')
    # ### end Alembic commands ###
